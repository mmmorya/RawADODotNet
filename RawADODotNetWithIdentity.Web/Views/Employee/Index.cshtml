@model IEnumerable<EmployeeDto>
@{
    ViewData["Title"] = "Employee";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h4>Employee Management</h4>
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="#">Home</a></li>
        <li class="breadcrumb-item active" aria-current="page">Library</li>
    </ol>
</nav>
<div class="row">
    <div class="col-11">
        <form id="search-form" asp-action="Index" data-ajax="true" data-ajax-method="GET" data-ajax-update="#ajax-show-list" data-ajax-loading="#mp-ajax-loading">
            <div class="row">
                <div class="col-2">
                    <select name="pageSize" class="form-select" >
                        <option value="10">10</option>
                        <option value="50">50</option>
                        <option value="100">100</option>
                        <option value="1000">1000</option>
                        <option value="2000">2000</option>
                    </select>
                </div>
                <div class="col-3">
                    <input type="text" class="form-control" name="searchTerm" placeholder="Enter Search">
                </div>
                <div class="col-s">
                    <input type="submit" class="btn btn-primary" value="Search">
                </div>
            </div>
        </form>
    </div>

    <div class="col-1">
        <a class="btn btn-primary" asp-controller="Employee" asp-action="Create">Add</a>
    </div>
</div>
<hr />
<table class="table">
    <thead>
        <tr>
            <th scope="col">Sr. No.</th>
            <th scope="col">First Name</th>
            <th scope="col">Last Name</th>
            <th scope="col">Email</th>
            <th scope="col">Phone</th>
            <th scope="col">Address</th>
            <th scope="col">DepartmentName</th>
            <th scope="col" class="text-center">Action</th>
        </tr>
    </thead>
    <tbody class="table-group-divider">
        @if (Model.Any())
        {
            int m = 1;
            foreach (var item in Model)
            {
                <tr>
                    <th scope="row">@m</th>
                    <td>@item.FirstName</td>
                    <td>@item.LastName</td>
                    <td>@item.Email</td>
                    <td>@item.Phone</td>
                    <td>@item.Address</td>
                    <td>@item.MyDepartmentDto.DepartmentName</td>
                    <td class="text-center">
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-action="Detail" asp-route-id="@item.Id">Detail</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id" class="text-danger">Remove</a>
                    </td>
                </tr>
                m++;
            }
        }
        else
        {
            <tr>
                <th scope="row" colspan="8" class="text-center">No Records Found!</th>
            </tr>
        }
    </tbody>
</table>
@PagedList.Pager(actionName: "Index", controllerName: "Employee", areaName:"",
        routeValues: new
        {
            searchTerm = (string)ViewBag.SearchTerm,
            pageSize = (int)ViewBag.PageSize,
        },
        // If you don't need AJAX and want it to reload the page when switching between the pages, just set ajaxAttributes to null
        //Don't forget to add jquery.unobtrusive scripts to the view
        ajaxAttributes: new
        {
            data_ajax = "true",
            data_ajax_update = "#ajax-show-list",
            data_ajax_method = "GET",
            data_ajax_mode = "replace"
        },
        pagerOptions: new PagerOptions
        {
            //Get data from ViewBags provided by controller
            CurrentPage = (int)ViewBag.CurrentPage,
            TotalItemCount = (int)ViewBag.TotalItemCount,
            PageCount = (int)ViewBag.PageCount
        })